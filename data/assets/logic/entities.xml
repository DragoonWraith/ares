<library>
  <addon plugin="cel.addons.questdef">
    <quest name="StandardActivator">
      <state name="on">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$this" sequence="one" entity_tag="sequencer" />
          <reward type="cel.rewards.debugprint" message="on started" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="one" />
          <reward type="cel.rewards.debugprint" message="On Done" />
          <reward type="cel.rewards.newstate" state="waitOff" />
        </trigger>
      </state>
      <state name="init">
        <oninit>
          <reward type="cel.rewards.debugprint" message="starting quest" />
        </oninit>
        <trigger type="cel.triggers.message">
          <fireon entity="$this" mask="ares.Activate" />
          <reward type="cel.rewards.newstate" state="on" />
        </trigger>
      </state>
      <state name="waitOff">
        <trigger type="cel.triggers.message">
          <fireon entity="$this" mask="ares.Activate" />
          <reward type="cel.rewards.newstate" state="off" />
        </trigger>
      </state>
      <state name="off">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$this" sequence="two" entity_tag="sequencer" />
          <reward type="cel.rewards.debugprint" message="off started" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="two" />
          <reward type="cel.rewards.debugprint" message="Off Done" />
          <reward type="cel.rewards.newstate" state="init" />
        </trigger>
      </state>
    </quest>
    <quest name="RotateZSequencer">
      <!--This quest rotates the mesh a relative angle (and back). It is supposed to be used in combination with an Activator quest (like StandardActivator). Parameters are 'duration' (long) and 'angle' (float).-->
      <sequence name="one">
        <op duration="$duration" type="cel.seqops.transform" entity="$this">
          <rotz angle="$angle" />
        </op>
        <delay time="$duration" />
      </sequence>
      <sequence name="two">
        <op duration="$duration" type="cel.seqops.transform" entity="$this" reversed="true">
          <rotz angle="$angle" />
        </op>
        <delay time="$duration" />
      </sequence>
    </quest>
    <quest name="RotateYSequencer">
      <!--This quest rotates the mesh a relative angle (and back). It is supposed to be used in combination with an Activator quest (like StandardActivator). Parameters are 'duration' (long) and 'angle' (float).-->
      <sequence name="one">
        <op duration="$duration" type="cel.seqops.transform" entity="$this">
          <roty angle="$angle" />
        </op>
        <delay time="$duration" />
      </sequence>
      <sequence name="two">
        <op duration="$duration" type="cel.seqops.transform" entity="$this" reversed="true">
          <roty angle="$angle" />
        </op>
        <delay time="$duration" />
      </sequence>
    </quest>
    <quest name="RotateXSequencer">
      <!--This quest rotates the mesh a relative angle (and back). It is supposed to be used in combination with an Activator quest (like StandardActivator). Parameters are 'duration' (long) and 'angle' (float).-->
      <sequence name="one">
        <op duration="$duration" type="cel.seqops.transform" entity="$this">
          <rotx angle="$angle" />
        </op>
        <delay time="$duration" />
      </sequence>
      <sequence name="two">
        <op duration="$duration" type="cel.seqops.transform" entity="$this" reversed="true">
          <rotx angle="$angle" />
        </op>
        <delay time="$duration" />
      </sequence>
    </quest>
    <quest name="MoveSequencer">
      <!--This quest moves the mesh a relative amount (and back). It is supposed to be used in combination with an Activator quest (like StandardActivator). Parameters are 'duration' (long) and 'x', 'y', 'z' (float).-->
      <sequence name="one">
        <op duration="$duration" type="cel.seqops.transform" entity="$this">
          <v x="$x" y="$y" z="$z" />
        </op>
        <delay time="$duration" />
      </sequence>
      <sequence name="two">
        <op duration="$duration" type="cel.seqops.transform" entity="$this" reversed="true">
          <v x="$x" y="$y" z="$z" />
        </op>
        <delay time="$duration" />
      </sequence>
    </quest>
  </addon>
  <addon plugin="cel.addons.dynamicworld.loader">
    <dynworld name="World" />
  </addon>
  <addon plugin="cel.addons.celentitytpl" entityname="StandardMover">
    <!--A template hosting a quest that can move an object between two positions based on an activation message.-->
    <propclass name="pclogic.quest" tag="activator">
      <action name="NewQuest">
        <par name="name" string="StandardActivator" />
      </action>
      <property name="state" string="init" />
    </propclass>
    <propclass name="pcobject.mesh" />
    <propclass name="pclogic.quest" tag="sequencer">
      <action name="NewQuest">
        <par name="duration" long="@duration" />
        <par name="x" float="@x" />
        <par name="y" float="@y" />
        <par name="z" float="@z" />
        <par name="name" string="MoveSequencer" />
      </action>
    </propclass>
  </addon>
  <addon plugin="cel.addons.celentitytpl" entityname="StandardYRotator">
    <!--A template hosting a quest that can rotate an object back and forth based on an activation message.-->
    <propclass name="pclogic.quest" tag="activator">
      <action name="NewQuest">
        <par name="name" string="StandardActivator" />
      </action>
      <property name="state" string="init" />
    </propclass>
    <propclass name="pcobject.mesh" />
    <propclass name="pclogic.quest" tag="sequencer">
      <action name="NewQuest">
        <par name="duration" long="@duration" />
        <par name="angle" float="@angle" />
        <par name="name" string="RotateYSequencer" />
      </action>
    </propclass>
  </addon>
</library>
