<library>
  <addon plugin="cel.addons.questdef">
    <quest name="BridgeSequencerToToggleMessageM">
      <!--This quest acts as a bridge between the sequencer (on the same entity as this quest) and a DblActivatorMessage quest on another entity.
@param bar,string is the name of the entity containing the DblActivatorMessage-->
      <state name="init">
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="one" />
          <reward type="cel.rewards.message" entities="$bars" id="activator.toggle" />
          <reward type="cel.rewards.newstate" state="init" />
        </trigger>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="two" />
          <reward type="cel.rewards.message" entities="$bars" id="activator.toggle" />
          <reward type="cel.rewards.newstate" state="init" />
        </trigger>
      </state>
    </quest>
    <quest name="DblActivatorLoop">
      <!--This quest works in combination with a double sequencer and serves as a way to activate the sequence between the two states ('one' and 'two'). Use this in combination with a 'DblSequencer...' quest with tag 'sequencer'. This version is automatically activated and just loops the sequence.-->
      <state name="on">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$this" sequence="one" entity_tag="sequencer" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="one" />
          <reward type="cel.rewards.newstate" state="off" />
        </trigger>
      </state>
      <state name="off">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$this" sequence="two" entity_tag="sequencer" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="two" />
          <reward type="cel.rewards.newstate" state="on" />
        </trigger>
      </state>
    </quest>
    <quest name="DblActivatorStandard">
      <!--This quest works in combination with a double sequencer and serves as a way to activate the sequence between the two states ('one' and 'two'). Use this in combination with a 'DblSequencer...' quest with tag 'sequencer'. This version is based on the standard activation message from the game controller.-->
      <state name="on">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$this" sequence="one" entity_tag="sequencer" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="one" />
          <reward type="cel.rewards.newstate" state="waitOff" />
        </trigger>
      </state>
      <state name="init">
        <trigger type="cel.triggers.message">
          <fireon entity="$this" mask="ares.Activate" />
          <reward type="cel.rewards.newstate" state="on" />
        </trigger>
      </state>
      <state name="waitOff">
        <trigger type="cel.triggers.message">
          <fireon entity="$this" mask="ares.Activate" />
          <reward type="cel.rewards.newstate" state="off" />
        </trigger>
      </state>
      <state name="off">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$this" sequence="two" entity_tag="sequencer" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="two" />
          <reward type="cel.rewards.newstate" state="init" />
        </trigger>
      </state>
    </quest>
    <quest name="ProximityMessage">
      <!---->
      <state name="init">
        <trigger type="cel.triggers.trigger">
          <fireon entity="$this" />
          <reward type="cel.rewards.message" entity="World" id="cel.messenger.action.Message">
            <par name="type" string="std" />
            <par name="id" string="" />
            <par name="msg1" string="$message" />
          </reward>
          <reward type="cel.rewards.newstate" state="done" />
        </trigger>
      </state>
      <state name="done" />
    </quest>
    <quest name="DblSequencerRotateX">
      <!--This quest rotates the mesh a relative angle (and back). It is supposed to be used in combination with an Activator quest (like StandardActivator).
@param duration,long,1000 is the duration of the sequence
@param angle,float,3,1415
-->
      <sequence name="one">
        <op duration="$duration" type="cel.seqops.transform" entity="$this">
          <rotx angle="$angle" />
        </op>
        <delay time="$duration" />
      </sequence>
      <sequence name="two">
        <op duration="$duration" type="cel.seqops.transform" entity="$this" reversed="true">
          <rotx angle="$angle" />
        </op>
        <delay time="$duration" />
      </sequence>
    </quest>
    <quest name="DblActivatorTrigger">
      <!--This quest works in combination with a double sequencer and serves as a way to activate the sequence between the two states ('one' and 'two'). Use this in combination with a 'DblSequencer...' quest with tag 'sequencer'. This version is based on a timer.
@param trigger,string is the name of the entity containing the trigger property class-->
      <state name="on">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$this" sequence="one" entity_tag="sequencer" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="one" />
          <reward type="cel.rewards.newstate" state="waitOff" />
        </trigger>
      </state>
      <state name="init">
        <trigger type="cel.triggers.trigger">
          <fireon entity="$trigger" />
          <reward type="cel.rewards.newstate" state="on" />
        </trigger>
      </state>
      <state name="waitOff">
        <trigger type="cel.triggers.trigger">
          <fireon entity="$trigger" leave="true" />
          <reward type="cel.rewards.newstate" state="off" />
        </trigger>
      </state>
      <state name="off">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$this" sequence="two" entity_tag="sequencer" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="two" />
          <reward type="cel.rewards.newstate" state="init" />
        </trigger>
      </state>
    </quest>
    <quest name="DblSequencerRotateY">
      <!--This quest rotates the mesh a relative angle (and back). It is supposed to be used in combination with an Activator quest (like StandardActivator).
@param duration,long,1000 is the duration of the sequence
@param angle,float,3,1415
-->
      <sequence name="one">
        <op duration="$duration" type="cel.seqops.transform" entity="$this">
          <roty angle="$angle" />
        </op>
        <delay time="$duration" />
      </sequence>
      <sequence name="two">
        <op duration="$duration" type="cel.seqops.transform" entity="$this" reversed="true">
          <roty angle="$angle" />
        </op>
        <delay time="$duration" />
      </sequence>
    </quest>
    <quest name="DblActivatorTimer">
      <!--This quest works in combination with a double sequencer and serves as a way to activate the sequence between the two states ('one' and 'two'). Use this in combination with a 'DblSequencer...' quest with tag 'sequencer'. This version is based on a timer.
@param timeout,long,0 indicates how long to wait before switching (in ms)-->
      <state name="on">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$this" sequence="one" entity_tag="sequencer" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="one" />
          <reward type="cel.rewards.newstate" state="waitOff" />
        </trigger>
      </state>
      <state name="init">
        <trigger type="cel.triggers.timeout">
          <fireon timeout="$timeout" />
          <reward type="cel.rewards.newstate" state="on" />
        </trigger>
      </state>
      <state name="waitOff">
        <trigger type="cel.triggers.timeout">
          <fireon timeout="$timeout" />
          <reward type="cel.rewards.newstate" state="off" />
        </trigger>
      </state>
      <state name="off">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$this" sequence="two" entity_tag="sequencer" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="two" />
          <reward type="cel.rewards.newstate" state="init" />
        </trigger>
      </state>
    </quest>
    <quest name="DblSequencerRotateZ">
      <!--This quest rotates the mesh a relative angle (and back). It is supposed to be used in combination with an Activator quest (like StandardActivator).
@param duration,long,1000 is the duration of the sequence
@param angle,float,3,1415
-->
      <sequence name="one">
        <op duration="$duration" type="cel.seqops.transform" entity="$this">
          <rotz angle="$angle" />
        </op>
        <delay time="$duration" />
      </sequence>
      <sequence name="two">
        <op duration="$duration" type="cel.seqops.transform" entity="$this" reversed="true">
          <rotz angle="$angle" />
        </op>
        <delay time="$duration" />
      </sequence>
    </quest>
    <quest name="DblSequencerMove">
      <!--This quest moves the mesh a relative amount (and back). It is supposed to be used in combination with an Activator quest (like StandardActivator).
@param duration,long,1000 is the duration of the sequence
@param x,float,0.0
@param y,float,0.0
@param z,float,0.0-->
      <sequence name="one">
        <op duration="$duration" type="cel.seqops.transform" entity="$this">
          <v x="$x" y="$y" z="$z" />
        </op>
        <delay time="$duration" />
      </sequence>
      <sequence name="two">
        <op duration="$duration" type="cel.seqops.transform" entity="$this" reversed="true">
          <v x="$x" y="$y" z="$z" />
        </op>
        <delay time="$duration" />
      </sequence>
    </quest>
    <quest name="DblActivatorMessage">
      <!--This quest works in combination with a double sequencer and serves as a way to activate the sequence between the two states ('one' and 'two'). Use this in combination with a 'DblSequencer...' quest with tag 'sequencer'. This version is based on the 'activator.toggle' message.-->
      <state name="on">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$this" sequence="one" entity_tag="sequencer" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="one" />
          <reward type="cel.rewards.newstate" state="waitOff" />
        </trigger>
      </state>
      <state name="init">
        <trigger type="cel.triggers.message">
          <fireon entity="$this" mask="activator.toggle" />
          <reward type="cel.rewards.newstate" state="on" />
        </trigger>
      </state>
      <state name="waitOff">
        <trigger type="cel.triggers.message">
          <fireon entity="$this" mask="activator.toggle" />
          <reward type="cel.rewards.newstate" state="off" />
        </trigger>
      </state>
      <state name="off">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$this" sequence="two" entity_tag="sequencer" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="two" />
          <reward type="cel.rewards.newstate" state="init" />
        </trigger>
      </state>
    </quest>
    <quest name="BridgeSequencerToToggleMessage">
      <!--This quest acts as a bridge between the sequencer (on the same entity as this quest) and a DblActivatorMessage quest on another entity.
@param bar,string is the name of the entity containing the DblActivatorMessage-->
      <state name="init">
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="one" />
          <reward type="cel.rewards.message" entity="$bar" id="activator.toggle" />
          <reward type="cel.rewards.newstate" state="init" />
        </trigger>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$this" entity_tag="sequencer" sequence="two" />
          <reward type="cel.rewards.message" entity="$bar" id="activator.toggle" />
          <reward type="cel.rewards.newstate" state="init" />
        </trigger>
      </state>
    </quest>
    <quest name="DblActivatorOtherStandard">
      <!--This quest works in combination with a double sequencer and serves as a way to activate the sequence between the two states ('one' and 'two'). Use this in combination with a 'DblSequencer...' quest with tag 'sequencer'. This version is based on the standard activation message from the game controller. This version works on the sequencer of another entity.
@param target,string is the name of the target entity.-->
      <state name="on">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$target" sequence="one" entity_tag="sequencer" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$target" entity_tag="sequencer" sequence="one" />
          <reward type="cel.rewards.newstate" state="waitOff" />
        </trigger>
      </state>
      <state name="init">
        <trigger type="cel.triggers.message">
          <fireon entity="$this" mask="ares.Activate" />
          <reward type="cel.rewards.newstate" state="on" />
        </trigger>
      </state>
      <state name="waitOff">
        <trigger type="cel.triggers.message">
          <fireon entity="$this" mask="ares.Activate" />
          <reward type="cel.rewards.newstate" state="off" />
        </trigger>
      </state>
      <state name="off">
        <oninit>
          <reward type="cel.rewards.sequence" entity="$target" sequence="two" entity_tag="sequencer" />
        </oninit>
        <trigger type="cel.triggers.sequencefinish">
          <fireon entity="$target" entity_tag="sequencer" sequence="two" />
          <reward type="cel.rewards.newstate" state="init" />
        </trigger>
      </state>
    </quest>
  </addon>
  <addon plugin="cel.addons.dynamicworld.loader">
    <dynworld name="World" />
  </addon>
  <addon plugin="cel.addons.celentitytpl" entityname="MessageMover">
    <!--A template hosting a quest that can move an object between two positions based on an activator.toggle message.
@param duration,long,1000 duration for the sequencer
@param x,float,0.0
@param y,float,0.0
@param z,float,0.0
-->
    <propclass name="pclogic.quest" tag="activator">
      <action name="NewQuest">
        <par name="name" string="DblActivatorMessage" />
      </action>
      <property name="state" string="init" />
    </propclass>
    <propclass name="pcobject.mesh" />
    <propclass name="pclogic.quest" tag="sequencer">
      <action name="NewQuest">
        <par name="name" string="DblSequencerMove" />
        <par name="duration" long="$duration" />
        <par name="x" float="$x" />
        <par name="y" float="$y" />
        <par name="z" float="$z" />
      </action>
    </propclass>
  </addon>
  <addon plugin="cel.addons.celentitytpl" entityname="TriggerMover">
    <!--A template hosting a quest that can move an object between two positions based on an activation message.
@param trigger,string is the name of the entity that holds the trigger property class
@param duration,long,1000 duration for the sequencer
@param x,float,0.0
@param y,float,0.0
@param z,float,0.0
-->
    <propclass name="pclogic.quest" tag="activator">
      <action name="NewQuest">
        <par name="name" string="DblActivatorTrigger" />
        <par name="trigger" string="$trigger" />
      </action>
      <property name="state" string="init" />
    </propclass>
    <propclass name="pcobject.mesh" />
    <propclass name="pclogic.quest" tag="sequencer">
      <action name="NewQuest">
        <par name="name" string="DblSequencerMove" />
        <par name="duration" long="$duration" />
        <par name="x" float="$x" />
        <par name="y" float="$y" />
        <par name="z" float="$z" />
      </action>
    </propclass>
  </addon>
  <addon plugin="cel.addons.celentitytpl" entityname="ProximityMessage">
    <!--A template hosting a quest that shows a message the first time a player comes near.
@param message,string,... the message to show
-->
    <propclass name="pclogic.quest">
      <action name="NewQuest">
        <par name="name" string="ProximityMessage" />
        <par name="message" string="$message" />
      </action>
      <property name="state" string="init" />
    </propclass>
    <propclass name="pclogic.trigger">
      <property name="follow" bool="1" />
      <property name="strict" bool="0" />
      <property name="monitor" string="Player" />
      <property name="delay" long="200" />
      <property name="jitter" long="10" />
      <action name="SetupTriggerSphere">
        <par name="position" vector3="-6.79207,0,23.2127" />
        <par name="radius" float="5" />
      </action>
    </propclass>
    <propclass name="pcobject.mesh" />
  </addon>
  <addon plugin="cel.addons.celentitytpl" entityname="StandardOtherMover">
    <!--A template hosting a quest that can move another object between two positions based on an activation message. This is useful for a switch (for example) to turn on a light or to open a door.
@param target,string is the name of the entity that holds the sequencer quest
-->
    <propclass name="pclogic.quest" tag="activator">
      <action name="NewQuest">
        <par name="name" string="DblActivatorOtherStandard" />
        <par name="target" string="$target" />
      </action>
      <property name="state" string="init" />
    </propclass>
    <propclass name="pcobject.mesh" />
  </addon>
  <addon plugin="cel.addons.celentitytpl" entityname="TimedYRotator">
    <!--A template hosting a quest that can rotate an object back and forth based on a timer.
@param duration,long,1000 duration for the sequencer
@param angle,float,3.1415 angle for the sequencer
@param timeout,long,1000 timeout to wait before firing the sequence-->
    <propclass name="pclogic.quest" tag="activator">
      <action name="NewQuest">
        <par name="name" string="DblActivatorTimer" />
        <par name="timeout" long="$timeout" />
      </action>
      <property name="state" string="init" />
    </propclass>
    <propclass name="pcobject.mesh" />
    <propclass name="pclogic.quest" tag="sequencer">
      <action name="NewQuest">
        <par name="name" string="DblSequencerRotateY" />
        <par name="angle" float="$angle" />
        <par name="duration" long="$duration" />
      </action>
    </propclass>
  </addon>
  <addon plugin="cel.addons.celentitytpl" entityname="StandardMover">
    <!--A template hosting a quest that can move an object between two positions based on an activation message.
@param duration,long,1000 duration for the sequencer
@param x,float,0.0
@param y,float,0.0
@param z,float,0.0
-->
    <propclass name="pclogic.quest" tag="activator">
      <action name="NewQuest">
        <par name="name" string="DblActivatorStandard" />
      </action>
      <property name="state" string="init" />
    </propclass>
    <propclass name="pcobject.mesh" />
    <propclass name="pclogic.quest" tag="sequencer">
      <action name="NewQuest">
        <par name="name" string="DblSequencerMove" />
        <par name="duration" long="$duration" />
        <par name="x" float="$x" />
        <par name="y" float="$y" />
        <par name="z" float="$z" />
      </action>
    </propclass>
  </addon>
  <addon plugin="cel.addons.celentitytpl" entityname="StandardYRotator">
    <!--A template hosting a quest that can rotate an object back and forth based on an activation message.
A template hosting a quest that can rotate an object back and forth in a loop.
@param duration,long,1000 duration for the sequencer
@param angle,float,3.1415 angle for the sequencer-->
    <propclass name="pclogic.quest" tag="activator">
      <action name="NewQuest">
        <par name="name" string="DblActivatorStandard" />
      </action>
      <property name="state" string="init" />
    </propclass>
    <propclass name="pcobject.mesh" />
    <propclass name="pclogic.quest" tag="sequencer">
      <action name="NewQuest">
        <par name="name" string="DblSequencerRotateY" />
        <par name="angle" float="$angle" />
        <par name="duration" long="$duration" />
      </action>
    </propclass>
  </addon>
  <addon plugin="cel.addons.celentitytpl" entityname="LoopedYRotator">
    <!--A template hosting a quest that can rotate an object back and forth in a loop.
@param duration,long,1000 duration for the sequencer
@param angle,float,3.1415 angle for the sequencer-->
    <propclass name="pclogic.quest" tag="activator">
      <action name="NewQuest">
        <par name="name" string="DblActivatorLoop" />
      </action>
      <property name="state" string="on" />
    </propclass>
    <propclass name="pcobject.mesh" />
    <propclass name="pclogic.quest" tag="sequencer">
      <action name="NewQuest">
        <par name="name" string="DblSequencerRotateY" />
        <par name="angle" float="$angle" />
        <par name="duration" long="$duration" />
      </action>
    </propclass>
  </addon>
  <addon plugin="cel.addons.celentitytpl" entityname="Teleporter">
    <propclass name="pclogic.wire">
      <action name="AddInput">
        <par name="mask" string="ares.Activate" />
      </action>
      <action name="AddOutput">
        <par name="destination" string="$destination" />
        <par name="msgid" string="ares.controller.Teleport" />
        <par name="entity" string="World" />
      </action>
    </propclass>
  </addon>
</library>
