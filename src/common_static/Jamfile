SubDir TOP src common_static ;

if $(HAVE_CS_STATIC_PLUGINS) = "yes"
  && $(HAVE_CEL_STATIC_PLUGINS) = "yes"
{
  SubVariant static ;

  # Library that pulls in static plugins needed by both ares and aresed
  Description common_static : "Ares common static plugins" ;
  Library common_static :
    [ Wildcard *.cpp *.h ] :
    shared independent ;
  CFlags common_static : [ FDefines CS_STATIC_LINKED ] ;
  MsvcDefine common_static : CS_STATIC_LINKED ;
  CFlags common_static : [ FDefines ARES_COMMON_STATIC_LIB ] ;
  MsvcDefine common_static : ARES_COMMON_STATIC_LIB ;

  #
  # The plugins that we need
  #
  STATIC.PLUGINLIST =
    animesh
    animeshldr
    decal
    bindoc
    docpreproc
    bruteblock
    simpleformer
    simpleformerldr
    bugplug
    csbmpimg
    csconin
    csconout
    csddsimg
    csfont
    csgifimg
    csjpgimg
    csopcode
    csparser
    cspngimg
    cssynldr
    cstgaimg
    dsplex
    dynavis
    emit
    emitldr
    engine
    engseq
    imgplex
    fontplex
    freefnt2
    frustvis
    genmesh
    gl3d
    glshader_arb
    glshader_fixed
    gmeshldr
    gmeshskelanim2
    gmeshanim
    gmeshanimpdl
    haze
    hazeldr
    lghtng
    null2d
    null3d
    nullmesh
    nullmeshldr
    physldr
    particles
    particlesldr
    ptanimimg
    ptpdlight
    reporter
    sequence
    shadermgr
    shaderweaver
    slcombiner
    skeleton
    skeleton2
    skeleton2ldr
    skelldr
    spr2d
    spr3d
    spr3dbin
    spr3dldr
    spr2dldr
    stdrep
    terrain2
    terrain2ldr
    terrainldr
    trans_std
    vfs
    xmlread
    xmlshader
    vproc_std
    bodymesh
    bodymeshldr
    ;

  #
  # The plugins that are nice to have if present
  #
  STATIC.OPTIONALPLUGINLIST =
    bullet
    csjngimg
    glshader_cg
    glshader_ps1
    glshader_glsl
    rm_deferred
    rm_rlcompat
    rm_shadow_pssm
    rm_unshadowed
    sndmanager
    sndsysopenal
    sndsyssoft
    sndsysloader
    sndsysnull
    sndsysogg
    sndsyswav
    ;

  if $(TARGET.OS) = "WIN32" { STATIC.PLUGINLIST += sndsyswin ; }
  if $(TARGET.OS) = "MACOS_X" { STATIC.PLUGINLIST += sndsyscoreaudio ; }
  if $(TARGET.OS) = "UNIX"
  {
    STATIC.OPTIONALPLUGINLIST += sndsysoss ;
    STATIC.OPTIONALPLUGINLIST += sndsysalsa ;
  }

  LinkStaticPlugins common_static : $(STATIC.PLUGINLIST) : $(STATIC.OPTIONALPLUGINLIST)
  : CRYSTAL
  :
  : # Trigger update of generated code when the plugins list changes
  $(SUBDIR)/Jamfile ;

  LinkStaticPlugins common_static :
    addon_celentity
    addon_celentitytpl
    addon_celgraph
    addon_questdef
    addon_xmlscripts
    blxml
    celconsole
    celgraph
    mgr_quests
    mgr_billboard
    pfactormove
    pfanalogmotion
    pfdynmove
    pfwasdmove
    pfbillboard
    pfdamage
    pfdefcam
    pfdelegcam
    pfengine
    pfinput
    pfinv
    pfjump
    pfgrab
    pflight
    pfmechanics
    pfmeshdeform
    pfhover
    pfmesh
    pfmeshdeform
    pfmove
    pfmover
    pfnewcamera
    pfpathfinder
    pfportal
    pfquest
    pfwire
    pfsound
    pfsteer
    pftest
    pftools
    pftrackingcam
    pftrigger
    pfwheeled
    pfmessenger
    pfdynworld
    addon_dynworldload
    pfzone
    pfprojectile
    stdphyslayer
    elcm
    sequences
    triggers
    rewards
    parameters
    ui_gridinv
  :
  : CEL
  :
  : # Trigger update of generated code when the plugins list changes
  $(SUBDIR)/Jamfile ;

  LinkStaticPlugins common_static :
    curvemesh
    dynworldload
    gamecontrol
    nature
    rooms
    assetmanager
  :
  :
  :
  : # Trigger update of generated code when the plugins list changes
  $(SUBDIR)/Jamfile ;

  ExternalLibs common_static : CRYSTAL CEL ;
  SubVariant ;
}

